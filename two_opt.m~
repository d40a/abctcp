function besttour = two_opt(tour_obj, matrix)
% iterations = 5;
% newtour = tour_obj;
% bestcost = tour_obj.cost;
% no_improvement = 0;
% for iter=1: iterations
%     for i = 1:tour_obj.size-2
%         for j = i+1:tour_obj.size-1
%             if crosscheck(tour_obj.cities(i,:),tour_obj.cities(i+1,:),tour_obj.cities(j,:),tour_obj.cities(j+1,:))
%                 newtour.cities = two_opt_swap(tour_obj.cities, tour_obj.size, i+1, j);
%                 newtour = newtour.recost();
%                 if(newtour.cost < bestcost)
%                     tour_obj = newtour;
%                     bestcost = tour_obj.cost;
%                     no_improvement = 0;
%                 else no_improvement = no_improvement+1;
%                 end
%             end
%         end
%     end
% end

iterations = 5;
maxswaps = 100;
besttour = tour_obj;
no_improvement = 0;
fprintf('\nBEST TOUR COST = %d', besttour.cost);
for iter=1:iterations
    if no_improvement > 50 
        break;
    end
    for swap=1:maxswaps
        if no_improvement > 60 
            break;
        end
        
        opt_index = randperm(tour_obj.size - 2, 1);
        city = tour_obj.cities(opt_index);
        
        for i=2:tour_obj.size - 1
            if opt_index == i
                continue;
            end
            if opt_index + 1 == i
                continue;
            end
            new_next_city = tour_obj.cities(i);
            if matrix(city, tour_obj.cities(opt_index + 1)) > matrix(city, new_next_city) 
                new_tour = tour_obj;
                tmp = new_tour.cities(i);
                new_tour.cities(i) = new_tour.cities(opt_index + 1);
                new_tour.cities(opt_index + 1) = tmp;
                new_tour = new_tour.recost();
                if new_tour.cost < besttour.cost
                    besttour = new_tour;
                    besttour = besttour.recost();
                    no_improvement = 0;
                end
                
                if new_tour.cost < tour_obj.cost
                    tour_obj = new_tour;
                    tour_obj = tour_obj.recost();                
                end
            end
        end
        
%         p = randperm(tour_obj.size - 1, 2);
%         tmp = tour_obj.cities(p(1));
%         tour_obj.cities(p(1)) = tour_obj.cities(p(2));
%         tour_obj.cities(p(2)) = tour_obj.cities(tmp);
%         if (tour_obj.cost < bestcost)
%             bestcost = tour_obj.cost;
%             besttour = tour_obj;
%             no_improvement = 0;
%         else no_improvement = no_improvement + 1;
%         end 
    end
end
end

